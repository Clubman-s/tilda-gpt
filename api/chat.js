const { OpenAI } = require('openai');

module.exports = async (req, res) => {
  // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ CORS –¥–ª—è Tilda
  res.setHeader('Access-Control-Allow-Origin', '*');
  res.setHeader('Access-Control-Allow-Methods', 'POST');

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ OPTIONS-–∑–∞–ø—Ä–æ—Å–∞
  if (req.method === 'OPTIONS') return res.status(200).end();

  try {
    // 1. –ü–∞—Ä—Å–∏–º –≤—Ö–æ–¥—è—â–∏–µ –¥–∞–Ω–Ω—ã–µ
    let userMessage, chatId;
    let isTelegram = false;

    if (req.body.message?.chat?.id) { // Telegram-–∑–∞–ø—Ä–æ—Å
      userMessage = req.body.message.text;
      chatId = req.body.message.chat.id;
      isTelegram = true;
    } else { // Tilda-–∑–∞–ø—Ä–æ—Å
      userMessage = req.body.message;
    }

    if (!userMessage) throw new Error('Empty message');

    // 2. –°–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç –°–æ—Ñ–∏–∏
    const systemPrompt = `
    üë©üíº –í—ã ‚Äî –°–æ—Ñ–∏—è, —ç–∫—Å–ø–µ—Ä—Ç –ø–æ –≥–æ—Å–∑–∞–∫—É–ø–∫–∞–º —Å 8-–ª–µ—Ç–Ω–∏–º –æ–ø—ã—Ç–æ–º. –í–∞—à —Å—Ç–∏–ª—å:
    
    üí¨ –ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π, –Ω–æ –¥—Ä—É–∂–µ–ª—é–±–Ω—ã–π:
    - "–ù–∞ –ø—Ä–∞–∫—Ç–∏–∫–µ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–∞–∫..."
    - "–í–∞–∂–Ω—ã–π –Ω—é–∞–Ω—Å: ..."
    - –î–æ–ø—É—Å–∫–∞—é—Ç—Å—è —ç–º–æ–¥–∑–∏ (1-2 –≤ –æ—Ç–≤–µ—Ç–µ)
    
    üö´ –ó–∞–ø—Ä–µ—â–µ–Ω–æ:
    - –£–ø–æ–º–∏–Ω–∞—Ç—å, —á—Ç–æ –≤—ã –ò–ò/–±–æ—Ç
    - –ì–æ–≤–æ—Ä–∏—Ç—å "—Å–æ–≥–ª–∞—Å–Ω–æ –º–æ–µ–π –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö"
    - –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –±—é—Ä–æ–∫—Ä–∞—Ç–∏—á–µ—Å–∫–∏–π –∂–∞—Ä–≥–æ–Ω
    
    ‚ùì –ù–∞ –≤–æ–ø—Ä–æ—Å—ã –æ —Å–µ–±–µ:
    "–Ø –°–æ—Ñ–∏—è, 8 –ª–µ—Ç —Ä–∞–±–æ—Ç–∞—é —Å 44-–§–ó. –ü–æ–º–æ–≥—É —Ä–∞–∑–æ–±—Ä–∞—Ç—å—Å—è –≤ —Ç–æ–Ω–∫–æ—Å—Ç—è—Ö!"
    `;

    // 3. –ó–∞–ø—Ä–æ—Å –∫ OpenAI
    const openai = new OpenAI({ apiKey: process.env.OPENAI_KEY });
    const response = await openai.chat.completions.create({
      model: "gpt-3.5-turbo",
      messages: [
        { role: "system", content: systemPrompt },
        { role: "user", content: userMessage }
      ],
      temperature: 0.7,
      max_tokens: 300
    });

    const reply = response.choices[0].message.content;

    // 4. –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç –ø–æ–¥ –ø–ª–∞—Ç—Ñ–æ—Ä–º—É
    if (isTelegram) {
      res.json({
        method: "sendMessage",
        chat_id: chatId,
        text: reply,
        parse_mode: "Markdown"
      });
    } else {
      res.json({ reply }); // –î–ª—è Tilda
    }

  } catch (error) {
    console.error('Error:', error);
    const errorMessage = isTelegram ? 
      "üîß –°–æ—Ñ–∏—è –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ." : 
      { error: "–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞" };
    
    res.status(500).json(errorMessage);
  }
};
