const { OpenAI } = require('openai');

module.exports = async (req, res) => {
  // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ CORS
  res.setHeader('Access-Control-Allow-Origin', '*');
  res.setHeader('Access-Control-Allow-Methods', 'POST');

  if (req.method === 'OPTIONS') return res.status(200).end();

  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º API-–∫–ª—é—á
    if (!process.env.OPENAI_KEY) {
      throw new Error('OPENAI_KEY –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω');
    }

    const { message } = req.body;
    if (!message) {
      return res.status(400).json({ error: '–ü—É—Å—Ç–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ' });
    }

    const openai = new OpenAI({
      apiKey: process.env.OPENAI_KEY
    });

    // –°–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç –°–æ—Ñ–∏–∏
    const systemPrompt = `
    –¢—ã ‚Äî –°–æ—Ñ–∏—è, —ç–∫—Å–ø–µ—Ä—Ç –ø–æ –≥–æ—Å–∑–∞–∫—É–ø–∫–∞–º 44-–§–ó. –û—Ç–≤–µ—á–∞–π –¥—Ä—É–∂–µ–ª—é–±–Ω–æ –∏ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ.
    –ó–∞–ø—Ä–µ—â–µ–Ω–æ: –≥–æ–≤–æ—Ä–∏—Ç—å —á—Ç–æ —Ç—ã –ò–ò, —É–ø–æ–º–∏–Ω–∞—Ç—å "–±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö".
    –ü—Ä–∏–º–µ—Ä –æ—Ç–≤–µ—Ç–∞: "–ü–æ 44-–§–ó —Å—Ä–æ–∫ —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç 10 –¥–Ω–µ–π ‚è≥"
    `;

    const response = await openai.chat.completions.create({
      model: "gpt-3.5-turbo",
      messages: [
        { role: "system", content: systemPrompt },
        { role: "user", content: message }
      ],
      temperature: 0.7,
      max_tokens: 300
    });

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Ç–≤–µ—Ç OpenAI
    if (!response.choices?.[0]?.message?.content) {
      throw new Error('–ü—É—Å—Ç–æ–π –æ—Ç–≤–µ—Ç –æ—Ç OpenAI');
    }

    const reply = response.choices[0].message.content;
    res.json({ reply });

  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ API:', error);
    
    // –î–µ—Ç–∞–ª—å–Ω—ã–π –ª–æ–≥ –æ—à–∏–±–∫–∏
    const errorDetails = {
      error: error.message,
      type: error.type || 'unknown',
      status: error.status || 500
    };

    // –î–ª—è Tilda
    res.status(500).json({ 
      reply: 'üîç –°–æ—Ñ–∏—è –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.',
      details: process.env.NODE_ENV === 'development' ? errorDetails : null
    });
  }
};
